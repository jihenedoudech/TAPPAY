import { MigrationInterface, QueryRunner } from "typeorm";

export class InitialMigration1745838160940 implements MigrationInterface {
    name = 'InitialMigration1745838160940'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`addresses\` (\`id\` varchar(36) NOT NULL, \`fullAddress\` varchar(255) NULL, \`country\` varchar(255) NULL, \`state\` varchar(255) NULL, \`city\` varchar(255) NULL, \`street\` varchar(255) NULL, \`zip\` varchar(255) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`loyalty_cards\` (\`id\` varchar(36) NOT NULL, \`reference\` varchar(255) NULL, \`points\` int NOT NULL DEFAULT '0', \`expirationDate\` date NOT NULL, \`creationDate\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`renewedDate\` date NULL, \`status\` enum ('ACTIVE', 'INACTIVE', 'EXPIRED') NOT NULL DEFAULT 'ACTIVE', \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`IDX_f41b320d2f257fe61f497ebf45\` (\`reference\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`customers\` (\`id\` varchar(36) NOT NULL, \`firstName\` varchar(255) NULL, \`lastName\` varchar(255) NULL, \`cin\` varchar(255) NULL, \`email\` varchar(255) NULL, \`phone\` varchar(255) NULL, \`status\` enum ('ACTIVE', 'INACTIVE') NOT NULL DEFAULT 'ACTIVE', \`dateOfBirth\` date NULL, \`registrationDate\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`addressId\` varchar(36) NULL, \`loyaltyCardId\` varchar(36) NULL, UNIQUE INDEX \`REL_9a1ba71f8651412e2003cfa46d\` (\`addressId\`), UNIQUE INDEX \`REL_5e961f6016ed2ea95b7f7215fd\` (\`loyaltyCardId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`categories\` (\`id\` varchar(36) NOT NULL, \`name\` varchar(255) NOT NULL, \`description\` varchar(255) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`barcodes\` (\`id\` varchar(36) NOT NULL, \`barcode\` varchar(255) NOT NULL, \`description\` varchar(255) NULL, \`productDetailsId\` varchar(36) NOT NULL, UNIQUE INDEX \`IDX_90ab053989462a531339a41ce9\` (\`barcode\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`product_components\` (\`id\` varchar(36) NOT NULL, \`qty\` decimal(10,3) NOT NULL, \`finalProductId\` varchar(36) NOT NULL, \`componentProductId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`products_details\` (\`id\` varchar(36) NOT NULL, \`name\` varchar(255) NOT NULL, \`reference\` varchar(255) NULL, \`description\` varchar(255) NULL, \`brand\` varchar(255) NULL, \`image\` varchar(255) NULL, \`unitOfMeasure\` enum ('PIECE', 'PACK', 'KILOGRAM', 'LITER') NOT NULL DEFAULT 'PIECE', \`piecesPerPack\` int NULL, \`returnable\` tinyint NOT NULL DEFAULT 0, \`arrivalDate\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deletedAt\` datetime(6) NULL, \`type\` enum ('FINAL', 'COMPONENT', 'TRANSFORMED', 'FINAL_COMPONENT') NOT NULL DEFAULT 'FINAL', \`categoryId\` varchar(36) NULL, \`parentId\` varchar(36) NULL, UNIQUE INDEX \`IDX_4bd4dd204b81976df11a9d8531\` (\`reference\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`price_tiers\` (\`id\` varchar(36) NOT NULL, \`minimumQuantity\` decimal(10,3) NOT NULL, \`price\` decimal(10,3) NOT NULL, \`productStoreId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`purchase_item_stores\` (\`id\` varchar(36) NOT NULL, \`quantity\` decimal(10,3) NOT NULL, \`purchaseItemId\` varchar(36) NOT NULL, \`storeId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`purchase_items\` (\`id\` varchar(36) NOT NULL, \`quantity\` decimal(10,3) NOT NULL, \`priceExclTax\` decimal(10,3) NULL, \`tax\` int NOT NULL DEFAULT '0', \`priceInclTax\` decimal(10,3) NOT NULL, \`total\` decimal(10,3) NOT NULL, \`productDetailsId\` varchar(36) NOT NULL, \`purchaseRecordId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`purchase_records\` (\`id\` varchar(36) NOT NULL, \`date\` datetime NOT NULL, \`total\` decimal(10,3) NOT NULL, \`discount\` decimal(10,3) NOT NULL DEFAULT '0.000', \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`supplierId\` varchar(36) NULL, \`createdById\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`suppliers\` (\`id\` varchar(36) NOT NULL, \`name\` varchar(255) NOT NULL, \`company\` varchar(255) NULL, \`brand\` varchar(255) NULL, \`phone\` varchar(255) NULL, \`email\` varchar(255) NULL, \`taxId\` varchar(255) NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`product_stock_batch\` (\`id\` varchar(36) NOT NULL, \`originalStock\` decimal(10,3) NOT NULL, \`currentStock\` decimal(10,3) NOT NULL, \`costExclTax\` decimal(10,3) NULL, \`tax\` decimal(10,3) NOT NULL DEFAULT '0.000', \`costInclTax\` decimal(10,3) NOT NULL, \`purchaseDate\` date NOT NULL, \`origin\` enum ('PURCHASE', 'MOVEMENT') NOT NULL, \`originId\` varchar(255) NOT NULL, \`productStoreId\` varchar(36) NOT NULL, \`supplierId\` varchar(36) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`product_store\` (\`id\` varchar(36) NOT NULL, \`sellingPrice\` decimal(10,3) NULL, \`minimumSalePrice\` decimal(10,3) NULL, \`discountType\` enum ('NONE', 'PERCENTAGE', 'FIXED') NOT NULL DEFAULT 'NONE', \`discountAmount\` decimal(10,3) NULL, \`stockAlertLevel\` int NOT NULL DEFAULT '0', \`sku\` varchar(255) NULL, \`loyaltyPointsEarned\` int NULL, \`loyaltyPointsRedeemed\` int NULL, \`salesCount\` int NOT NULL DEFAULT '0', \`isRemovedAt\` datetime(6) NULL, \`productDetailsId\` varchar(36) NOT NULL, \`storeId\` varchar(36) NOT NULL, \`parentId\` varchar(36) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`order_items\` (\`id\` varchar(36) NOT NULL, \`quantity\` decimal(10,3) NOT NULL, \`status\` enum ('PENDING', 'SOLD', 'REFUNDED', 'CANCELED') NOT NULL, \`sellingPrice\` decimal(10,3) NOT NULL, \`total\` decimal(10,3) NOT NULL, \`productName\` varchar(255) NOT NULL, \`cost\` decimal(10,3) NULL, \`profit\` decimal(10,3) NULL, \`orderId\` varchar(36) NOT NULL, \`productId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`payment_methods\` (\`id\` varchar(36) NOT NULL, \`amount\` decimal(10,3) NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`voucherCode\` varchar(255) NULL, \`issuer\` varchar(255) NULL, \`expiryDate\` datetime NULL, \`checkNumber\` varchar(255) NULL, \`bankName\` varchar(255) NULL, \`accountHolderName\` varchar(255) NULL, \`issueDate\` datetime NULL, \`cardNumber\` varchar(255) NULL, \`pointsRedeemed\` int NULL, \`cardHolderName\` varchar(255) NULL, \`expirationDate\` varchar(255) NULL, \`cvv\` varchar(255) NULL, \`authorizationCode\` varchar(255) NULL, \`methodType\` varchar(255) NOT NULL, \`paymentId\` varchar(36) NULL, INDEX \`IDX_a459c395bc2ce90aa551fbe214\` (\`methodType\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`payments\` (\`id\` varchar(36) NOT NULL, \`transactionRef\` varchar(255) NULL, \`totalAmountDue\` decimal(10,3) NOT NULL, \`totalPaidAmount\` decimal(10,3) NOT NULL, \`remainingAmount\` decimal(10,3) NOT NULL DEFAULT '0.000', \`changeAmount\` decimal(10,3) NOT NULL DEFAULT '0.000', \`isFullyPaid\` tinyint NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`orderId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`orders\` (\`id\` varchar(36) NOT NULL, \`orderNumber\` varchar(255) NOT NULL, \`storeId\` varchar(255) NOT NULL, \`status\` enum ('DRAFT', 'CONFIRMED', 'COMPLETED', 'REFUNDED', 'CANCELED') NOT NULL DEFAULT 'DRAFT', \`dateTime\` timestamp NOT NULL, \`totalAmount\` decimal(10,3) NOT NULL, \`totalDiscount\` decimal(10,3) NOT NULL DEFAULT '0.000', \`totalRefund\` decimal(10,3) NOT NULL DEFAULT '0.000', \`totalItems\` int NOT NULL, \`totalCost\` decimal(10,3) NULL, \`totalProfit\` decimal(10,3) NULL, \`customerId\` varchar(36) NULL, \`shiftId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`shifts\` (\`id\` varchar(36) NOT NULL, \`startTime\` datetime NOT NULL, \`endTime\` datetime NULL, \`status\` enum ('OPEN', 'CLOSED') NOT NULL, \`openingCashAmount\` decimal(10,3) NOT NULL, \`totalAmount\` decimal(10,3) NOT NULL DEFAULT '0.000', \`totalSales\` decimal(10,3) NOT NULL DEFAULT '0.000', \`totalItems\` int NOT NULL DEFAULT '0', \`totalDiscounts\` decimal(10,3) NOT NULL DEFAULT '0.000', \`totalRefunds\` decimal(10,3) NOT NULL DEFAULT '0.000', \`totalProfit\` decimal(10,3) NOT NULL DEFAULT '0.000', \`totalCost\` decimal(10,3) NOT NULL DEFAULT '0.000', \`totalTransactions\` int NOT NULL DEFAULT '0', \`userId\` varchar(36) NOT NULL, \`storeId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`users\` (\`id\` varchar(36) NOT NULL, \`firstName\` varchar(255) NULL, \`lastName\` varchar(255) NULL, \`username\` varchar(255) NOT NULL, \`password\` varchar(255) NOT NULL, \`nationalId\` varchar(255) NULL, \`email\` varchar(255) NULL, \`phoneNumber\` varchar(255) NULL, \`dateOfBirth\` datetime NULL, \`role\` enum ('ADMIN', 'MANAGER', 'CASHIER') NOT NULL DEFAULT 'CASHIER', \`isActive\` tinyint NOT NULL DEFAULT 1, \`lastLogin\` datetime NULL, \`isConnected\` tinyint NOT NULL DEFAULT 0, \`failedLoginAttempts\` int NOT NULL DEFAULT '0', \`hiredAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`terminatedAt\` datetime(6) NULL, \`salaryAmount\` int NULL, \`preferedLanguage\` varchar(255) NULL, \`addressId\` varchar(36) NULL, \`storeInUseId\` varchar(36) NULL, UNIQUE INDEX \`IDX_fe0bb3f6520ee0469504521e71\` (\`username\`), UNIQUE INDEX \`REL_bafb08f60d7857f4670c172a6e\` (\`addressId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`expenses\` (\`id\` varchar(36) NOT NULL, \`type\` enum ('INTERNAL', 'EXTERNAL') NOT NULL, \`date\` datetime NOT NULL, \`externalExpenseName\` varchar(255) NULL, \`quantity\` decimal(10,3) NOT NULL, \`cost\` decimal(10,2) NULL, \`notes\` varchar(255) NULL, \`storeId\` varchar(36) NOT NULL, \`productId\` varchar(36) NULL, \`createdById\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`stores\` (\`id\` varchar(36) NOT NULL, \`name\` varchar(255) NOT NULL, \`phoneNumber\` varchar(255) NULL, \`email\` varchar(255) NULL, \`taxIdentificationNumber\` varchar(255) NULL, \`isOpen\` tinyint NOT NULL, \`operatingHours\` json NULL, \`currency\` varchar(50) NULL, \`paymentMethods\` json NULL, \`warehouseLocation\` varchar(255) NULL, \`addressId\` varchar(36) NULL, UNIQUE INDEX \`REL_d5740b38aa467721802eb30f24\` (\`addressId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`stock_movements\` (\`id\` varchar(36) NOT NULL, \`movementDate\` datetime NOT NULL, \`notes\` varchar(255) NULL, \`fromStoreId\` varchar(36) NOT NULL, \`toStoreId\` varchar(36) NOT NULL, \`createdById\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`stock_movement_items\` (\`id\` varchar(36) NOT NULL, \`quantity\` decimal(10,3) NOT NULL, \`notes\` varchar(255) NULL, \`stockMovementId\` varchar(36) NOT NULL, \`productId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`inventory_line\` (\`id\` varchar(36) NOT NULL, \`status\` enum ('DRAFT', 'COMPLETED', 'CANCELLED') NOT NULL, \`expectedQty\` decimal(10,3) NOT NULL, \`foundQty\` decimal(10,3) NULL, \`difference\` decimal(10,3) NULL, \`expectedValue\` decimal(10,3) NOT NULL, \`foundValue\` decimal(10,3) NULL, \`lossValue\` decimal(10,3) NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`inventoryId\` varchar(36) NOT NULL, \`productStoreId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`inventory\` (\`id\` varchar(36) NOT NULL, \`status\` enum ('DRAFT', 'COMPLETED', 'CANCELLED') NOT NULL, \`expectedValue\` decimal(10,3) NOT NULL, \`foundValue\` decimal(10,3) NULL, \`lossValue\` decimal(10,3) NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`storeId\` varchar(36) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`users_assigned_stores_stores\` (\`usersId\` varchar(36) NOT NULL, \`storesId\` varchar(36) NOT NULL, INDEX \`IDX_c99cf302a32f14f476ba0acfd3\` (\`usersId\`), INDEX \`IDX_d7bee51a7fd9a7aa3c9dea75d2\` (\`storesId\`), PRIMARY KEY (\`usersId\`, \`storesId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`customers\` ADD CONSTRAINT \`FK_9a1ba71f8651412e2003cfa46d4\` FOREIGN KEY (\`addressId\`) REFERENCES \`addresses\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`customers\` ADD CONSTRAINT \`FK_5e961f6016ed2ea95b7f7215fdb\` FOREIGN KEY (\`loyaltyCardId\`) REFERENCES \`loyalty_cards\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`barcodes\` ADD CONSTRAINT \`FK_4153816d8b27905c178cbe4512c\` FOREIGN KEY (\`productDetailsId\`) REFERENCES \`products_details\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product_components\` ADD CONSTRAINT \`FK_6f29288891685f4de65899a8503\` FOREIGN KEY (\`finalProductId\`) REFERENCES \`products_details\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product_components\` ADD CONSTRAINT \`FK_606c3ca2e9abce1bcea84e3a1bb\` FOREIGN KEY (\`componentProductId\`) REFERENCES \`products_details\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`products_details\` ADD CONSTRAINT \`FK_2cbe51bf2aebbf07b855695f5ba\` FOREIGN KEY (\`categoryId\`) REFERENCES \`categories\`(\`id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`products_details\` ADD CONSTRAINT \`FK_33d73b8e65901055b518b7a991e\` FOREIGN KEY (\`parentId\`) REFERENCES \`products_details\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`price_tiers\` ADD CONSTRAINT \`FK_b5bcd110987fcbeaed75f3af267\` FOREIGN KEY (\`productStoreId\`) REFERENCES \`product_store\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`purchase_item_stores\` ADD CONSTRAINT \`FK_4a1ca04d361b493d74b5f023e87\` FOREIGN KEY (\`purchaseItemId\`) REFERENCES \`purchase_items\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`purchase_item_stores\` ADD CONSTRAINT \`FK_5e56e02177e6ce28cb1fcf89847\` FOREIGN KEY (\`storeId\`) REFERENCES \`stores\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`purchase_items\` ADD CONSTRAINT \`FK_d0880808297e3c85507a0ca093f\` FOREIGN KEY (\`productDetailsId\`) REFERENCES \`products_details\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`purchase_items\` ADD CONSTRAINT \`FK_c6d11684ff7c7a583c6d5013e74\` FOREIGN KEY (\`purchaseRecordId\`) REFERENCES \`purchase_records\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`purchase_records\` ADD CONSTRAINT \`FK_bf53c8c5e19ef2b3449b30ba9a5\` FOREIGN KEY (\`supplierId\`) REFERENCES \`suppliers\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`purchase_records\` ADD CONSTRAINT \`FK_0e255e9890f49fcf4d673545c0a\` FOREIGN KEY (\`createdById\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product_stock_batch\` ADD CONSTRAINT \`FK_f6587eae3d768f50f95fe8ce6f5\` FOREIGN KEY (\`productStoreId\`) REFERENCES \`product_store\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product_stock_batch\` ADD CONSTRAINT \`FK_edad385d057372d439f73be5ca1\` FOREIGN KEY (\`supplierId\`) REFERENCES \`suppliers\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product_store\` ADD CONSTRAINT \`FK_6a2ced2356d79dfe74e04fdd617\` FOREIGN KEY (\`productDetailsId\`) REFERENCES \`products_details\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product_store\` ADD CONSTRAINT \`FK_b9ec587a29f4228b21394c54fb7\` FOREIGN KEY (\`storeId\`) REFERENCES \`stores\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product_store\` ADD CONSTRAINT \`FK_c8633d8d947fcf97709f9044733\` FOREIGN KEY (\`parentId\`) REFERENCES \`product_store\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_items\` ADD CONSTRAINT \`FK_f1d359a55923bb45b057fbdab0d\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_items\` ADD CONSTRAINT \`FK_cdb99c05982d5191ac8465ac010\` FOREIGN KEY (\`productId\`) REFERENCES \`product_store\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`payment_methods\` ADD CONSTRAINT \`FK_08e088d89903eaf6bc7a468c52e\` FOREIGN KEY (\`paymentId\`) REFERENCES \`payments\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD CONSTRAINT \`FK_af929a5f2a400fdb6913b4967e1\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_e5de51ca888d8b1f5ac25799dd1\` FOREIGN KEY (\`customerId\`) REFERENCES \`customers\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_a8210c072acef6e5a6135e8e97e\` FOREIGN KEY (\`shiftId\`) REFERENCES \`shifts\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shifts\` ADD CONSTRAINT \`FK_7862b9a401e0fe7dc5ef96e9116\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shifts\` ADD CONSTRAINT \`FK_ed4279715716a6ceb12dd4d9558\` FOREIGN KEY (\`storeId\`) REFERENCES \`stores\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_bafb08f60d7857f4670c172a6ea\` FOREIGN KEY (\`addressId\`) REFERENCES \`addresses\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_b87647ee87c391e0b56e708e765\` FOREIGN KEY (\`storeInUseId\`) REFERENCES \`stores\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`expenses\` ADD CONSTRAINT \`FK_4dfda4b7af7b7dac0abec73bf3f\` FOREIGN KEY (\`storeId\`) REFERENCES \`stores\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`expenses\` ADD CONSTRAINT \`FK_c725e2069763176854555f23ef0\` FOREIGN KEY (\`productId\`) REFERENCES \`product_store\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`expenses\` ADD CONSTRAINT \`FK_4f3e45915b1db0536a90400b419\` FOREIGN KEY (\`createdById\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`stores\` ADD CONSTRAINT \`FK_d5740b38aa467721802eb30f24f\` FOREIGN KEY (\`addressId\`) REFERENCES \`addresses\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`stock_movements\` ADD CONSTRAINT \`FK_85d2576ff9d175b21150cc1cf79\` FOREIGN KEY (\`fromStoreId\`) REFERENCES \`stores\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`stock_movements\` ADD CONSTRAINT \`FK_fb2ebb27f966331b3a044214f52\` FOREIGN KEY (\`toStoreId\`) REFERENCES \`stores\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`stock_movements\` ADD CONSTRAINT \`FK_a44bd406bdca713a77887d776b3\` FOREIGN KEY (\`createdById\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`stock_movement_items\` ADD CONSTRAINT \`FK_a8ef15110303084bf0afc1a2737\` FOREIGN KEY (\`stockMovementId\`) REFERENCES \`stock_movements\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`stock_movement_items\` ADD CONSTRAINT \`FK_05cbd5c57efd3e22c6f72f3d214\` FOREIGN KEY (\`productId\`) REFERENCES \`product_store\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventory_line\` ADD CONSTRAINT \`FK_9d3f36d32c3fe1e8f43db1624bc\` FOREIGN KEY (\`inventoryId\`) REFERENCES \`inventory\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventory_line\` ADD CONSTRAINT \`FK_18483aada5f08a83f10cc282690\` FOREIGN KEY (\`productStoreId\`) REFERENCES \`product_store\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventory\` ADD CONSTRAINT \`FK_5ed96e04da0c7fec6205d485dca\` FOREIGN KEY (\`storeId\`) REFERENCES \`stores\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users_assigned_stores_stores\` ADD CONSTRAINT \`FK_c99cf302a32f14f476ba0acfd37\` FOREIGN KEY (\`usersId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`users_assigned_stores_stores\` ADD CONSTRAINT \`FK_d7bee51a7fd9a7aa3c9dea75d29\` FOREIGN KEY (\`storesId\`) REFERENCES \`stores\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`users_assigned_stores_stores\` DROP FOREIGN KEY \`FK_d7bee51a7fd9a7aa3c9dea75d29\``);
        await queryRunner.query(`ALTER TABLE \`users_assigned_stores_stores\` DROP FOREIGN KEY \`FK_c99cf302a32f14f476ba0acfd37\``);
        await queryRunner.query(`ALTER TABLE \`inventory\` DROP FOREIGN KEY \`FK_5ed96e04da0c7fec6205d485dca\``);
        await queryRunner.query(`ALTER TABLE \`inventory_line\` DROP FOREIGN KEY \`FK_18483aada5f08a83f10cc282690\``);
        await queryRunner.query(`ALTER TABLE \`inventory_line\` DROP FOREIGN KEY \`FK_9d3f36d32c3fe1e8f43db1624bc\``);
        await queryRunner.query(`ALTER TABLE \`stock_movement_items\` DROP FOREIGN KEY \`FK_05cbd5c57efd3e22c6f72f3d214\``);
        await queryRunner.query(`ALTER TABLE \`stock_movement_items\` DROP FOREIGN KEY \`FK_a8ef15110303084bf0afc1a2737\``);
        await queryRunner.query(`ALTER TABLE \`stock_movements\` DROP FOREIGN KEY \`FK_a44bd406bdca713a77887d776b3\``);
        await queryRunner.query(`ALTER TABLE \`stock_movements\` DROP FOREIGN KEY \`FK_fb2ebb27f966331b3a044214f52\``);
        await queryRunner.query(`ALTER TABLE \`stock_movements\` DROP FOREIGN KEY \`FK_85d2576ff9d175b21150cc1cf79\``);
        await queryRunner.query(`ALTER TABLE \`stores\` DROP FOREIGN KEY \`FK_d5740b38aa467721802eb30f24f\``);
        await queryRunner.query(`ALTER TABLE \`expenses\` DROP FOREIGN KEY \`FK_4f3e45915b1db0536a90400b419\``);
        await queryRunner.query(`ALTER TABLE \`expenses\` DROP FOREIGN KEY \`FK_c725e2069763176854555f23ef0\``);
        await queryRunner.query(`ALTER TABLE \`expenses\` DROP FOREIGN KEY \`FK_4dfda4b7af7b7dac0abec73bf3f\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_b87647ee87c391e0b56e708e765\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_bafb08f60d7857f4670c172a6ea\``);
        await queryRunner.query(`ALTER TABLE \`shifts\` DROP FOREIGN KEY \`FK_ed4279715716a6ceb12dd4d9558\``);
        await queryRunner.query(`ALTER TABLE \`shifts\` DROP FOREIGN KEY \`FK_7862b9a401e0fe7dc5ef96e9116\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_a8210c072acef6e5a6135e8e97e\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_e5de51ca888d8b1f5ac25799dd1\``);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP FOREIGN KEY \`FK_af929a5f2a400fdb6913b4967e1\``);
        await queryRunner.query(`ALTER TABLE \`payment_methods\` DROP FOREIGN KEY \`FK_08e088d89903eaf6bc7a468c52e\``);
        await queryRunner.query(`ALTER TABLE \`order_items\` DROP FOREIGN KEY \`FK_cdb99c05982d5191ac8465ac010\``);
        await queryRunner.query(`ALTER TABLE \`order_items\` DROP FOREIGN KEY \`FK_f1d359a55923bb45b057fbdab0d\``);
        await queryRunner.query(`ALTER TABLE \`product_store\` DROP FOREIGN KEY \`FK_c8633d8d947fcf97709f9044733\``);
        await queryRunner.query(`ALTER TABLE \`product_store\` DROP FOREIGN KEY \`FK_b9ec587a29f4228b21394c54fb7\``);
        await queryRunner.query(`ALTER TABLE \`product_store\` DROP FOREIGN KEY \`FK_6a2ced2356d79dfe74e04fdd617\``);
        await queryRunner.query(`ALTER TABLE \`product_stock_batch\` DROP FOREIGN KEY \`FK_edad385d057372d439f73be5ca1\``);
        await queryRunner.query(`ALTER TABLE \`product_stock_batch\` DROP FOREIGN KEY \`FK_f6587eae3d768f50f95fe8ce6f5\``);
        await queryRunner.query(`ALTER TABLE \`purchase_records\` DROP FOREIGN KEY \`FK_0e255e9890f49fcf4d673545c0a\``);
        await queryRunner.query(`ALTER TABLE \`purchase_records\` DROP FOREIGN KEY \`FK_bf53c8c5e19ef2b3449b30ba9a5\``);
        await queryRunner.query(`ALTER TABLE \`purchase_items\` DROP FOREIGN KEY \`FK_c6d11684ff7c7a583c6d5013e74\``);
        await queryRunner.query(`ALTER TABLE \`purchase_items\` DROP FOREIGN KEY \`FK_d0880808297e3c85507a0ca093f\``);
        await queryRunner.query(`ALTER TABLE \`purchase_item_stores\` DROP FOREIGN KEY \`FK_5e56e02177e6ce28cb1fcf89847\``);
        await queryRunner.query(`ALTER TABLE \`purchase_item_stores\` DROP FOREIGN KEY \`FK_4a1ca04d361b493d74b5f023e87\``);
        await queryRunner.query(`ALTER TABLE \`price_tiers\` DROP FOREIGN KEY \`FK_b5bcd110987fcbeaed75f3af267\``);
        await queryRunner.query(`ALTER TABLE \`products_details\` DROP FOREIGN KEY \`FK_33d73b8e65901055b518b7a991e\``);
        await queryRunner.query(`ALTER TABLE \`products_details\` DROP FOREIGN KEY \`FK_2cbe51bf2aebbf07b855695f5ba\``);
        await queryRunner.query(`ALTER TABLE \`product_components\` DROP FOREIGN KEY \`FK_606c3ca2e9abce1bcea84e3a1bb\``);
        await queryRunner.query(`ALTER TABLE \`product_components\` DROP FOREIGN KEY \`FK_6f29288891685f4de65899a8503\``);
        await queryRunner.query(`ALTER TABLE \`barcodes\` DROP FOREIGN KEY \`FK_4153816d8b27905c178cbe4512c\``);
        await queryRunner.query(`ALTER TABLE \`customers\` DROP FOREIGN KEY \`FK_5e961f6016ed2ea95b7f7215fdb\``);
        await queryRunner.query(`ALTER TABLE \`customers\` DROP FOREIGN KEY \`FK_9a1ba71f8651412e2003cfa46d4\``);
        await queryRunner.query(`DROP INDEX \`IDX_d7bee51a7fd9a7aa3c9dea75d2\` ON \`users_assigned_stores_stores\``);
        await queryRunner.query(`DROP INDEX \`IDX_c99cf302a32f14f476ba0acfd3\` ON \`users_assigned_stores_stores\``);
        await queryRunner.query(`DROP TABLE \`users_assigned_stores_stores\``);
        await queryRunner.query(`DROP TABLE \`inventory\``);
        await queryRunner.query(`DROP TABLE \`inventory_line\``);
        await queryRunner.query(`DROP TABLE \`stock_movement_items\``);
        await queryRunner.query(`DROP TABLE \`stock_movements\``);
        await queryRunner.query(`DROP INDEX \`REL_d5740b38aa467721802eb30f24\` ON \`stores\``);
        await queryRunner.query(`DROP TABLE \`stores\``);
        await queryRunner.query(`DROP TABLE \`expenses\``);
        await queryRunner.query(`DROP INDEX \`REL_bafb08f60d7857f4670c172a6e\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_fe0bb3f6520ee0469504521e71\` ON \`users\``);
        await queryRunner.query(`DROP TABLE \`users\``);
        await queryRunner.query(`DROP TABLE \`shifts\``);
        await queryRunner.query(`DROP TABLE \`orders\``);
        await queryRunner.query(`DROP TABLE \`payments\``);
        await queryRunner.query(`DROP INDEX \`IDX_a459c395bc2ce90aa551fbe214\` ON \`payment_methods\``);
        await queryRunner.query(`DROP TABLE \`payment_methods\``);
        await queryRunner.query(`DROP TABLE \`order_items\``);
        await queryRunner.query(`DROP TABLE \`product_store\``);
        await queryRunner.query(`DROP TABLE \`product_stock_batch\``);
        await queryRunner.query(`DROP TABLE \`suppliers\``);
        await queryRunner.query(`DROP TABLE \`purchase_records\``);
        await queryRunner.query(`DROP TABLE \`purchase_items\``);
        await queryRunner.query(`DROP TABLE \`purchase_item_stores\``);
        await queryRunner.query(`DROP TABLE \`price_tiers\``);
        await queryRunner.query(`DROP INDEX \`IDX_4bd4dd204b81976df11a9d8531\` ON \`products_details\``);
        await queryRunner.query(`DROP TABLE \`products_details\``);
        await queryRunner.query(`DROP TABLE \`product_components\``);
        await queryRunner.query(`DROP INDEX \`IDX_90ab053989462a531339a41ce9\` ON \`barcodes\``);
        await queryRunner.query(`DROP TABLE \`barcodes\``);
        await queryRunner.query(`DROP TABLE \`categories\``);
        await queryRunner.query(`DROP INDEX \`REL_5e961f6016ed2ea95b7f7215fd\` ON \`customers\``);
        await queryRunner.query(`DROP INDEX \`REL_9a1ba71f8651412e2003cfa46d\` ON \`customers\``);
        await queryRunner.query(`DROP TABLE \`customers\``);
        await queryRunner.query(`DROP INDEX \`IDX_f41b320d2f257fe61f497ebf45\` ON \`loyalty_cards\``);
        await queryRunner.query(`DROP TABLE \`loyalty_cards\``);
        await queryRunner.query(`DROP TABLE \`addresses\``);
    }

}
